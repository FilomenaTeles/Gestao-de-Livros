// <auto-generated />
using GestaoLivrosApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestaoLivrosApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230109090454_relationAuthorBook")]
    partial class relationAuthorBook
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestaoLivrosApi.Models.Authors.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "EUA",
                            Name = "John Grisham",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            Country = "Portugal",
                            Name = "José Rodrigues dos Santos",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            Country = "Alemanha",
                            Name = "Anne Jacobs",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            Country = "Reino Unido",
                            Name = "Dolly Alderton",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            Country = "EUA",
                            Name = "Colleen Hoover",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 6,
                            Country = "EUA",
                            Name = "Tracy Deonn",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 7,
                            Country = "França",
                            Name = "Antoine de Saint-Exupéry",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 8,
                            Country = "EUA",
                            Name = "Taylor Jenkins Reid",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 9,
                            Country = "EUA",
                            Name = "Holly Black",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 10,
                            Country = "EUA",
                            Name = "Nicholas Sparks",
                            isDeleted = false
                        });
                });

            modelBuilder.Entity("GestaoLivrosApi.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Isbn")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("Isbn")
                        .IsUnique();

                    b.ToTable("Books");
                });

            modelBuilder.Entity("GestaoLivrosApi.Models.Book", b =>
                {
                    b.HasOne("GestaoLivrosApi.Models.Authors.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("GestaoLivrosApi.Models.Authors.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
